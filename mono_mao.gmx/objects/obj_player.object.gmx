<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_baixo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// variaveis do player
vel = 8;            //Velocidade.
image_speed = 0;    //Velocidade da imagem.
global.vida = 3;  //Vida.
global.moeda = 0;   //Moedas.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Morrendo
if global.vida &lt;= 0
{
    instance_destroy();
    room_restart();
}

/// movimentacao do player
//Impedindo que o player saia da tela.
x = min(max(x, 0+sprite_width), room_width-sprite_width);
y = min(max(y, 0+sprite_height), room_height-sprite_height);

cima = keyboard_check(vk_up) || keyboard_check(ord("W"));       //Cima.
baixo = keyboard_check(vk_down) || keyboard_check(ord("S"));    //Baixo.
esq = keyboard_check(vk_left) || keyboard_check(ord("A"));      //Esquerda.
dir = keyboard_check(vk_right) || keyboard_check(ord("D"))      //Direita.
ataque = keyboard_check(vk_space)                               //Atacando.

if(esq){
    image_speed = (vel/room_speed);
    sprite_index = spr_player_esq;
}

if(dir){
    image_speed = (vel/room_speed);
    sprite_index = spr_player_dir;
}

if(cima){
    image_speed = (vel/room_speed);
    sprite_index = spr_player_cima;
}

if(baixo){
    image_speed = (vel/room_speed);
    sprite_index = spr_player_baixo;
}

if(keyboard_check(vk_nokey)){
    image_speed = 0;
    image_index = 0;
}

//(+x - -x) * vel.
velh = (dir-esq) * vel;
//(+y - -y) * vel.
velv = (baixo-cima) * vel;

//x = Velocidade Horizontal.
x += velh
//y = Velocidade Vertical.
y += velv


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ataque player
if(ataque){
    switch (sprite_index){
        case spr_player_esq:
            sprite_index = spr_player_atacando_esq;
        break;
        case spr_player_dir:
            sprite_index = spr_player_atacando_dir
        break;
        case spr_player_cima:
            sprite_index = spr_player_atacando_cima;
        break;
        case spr_player_baixo:
            sprite_index = spr_player_atacando_baixo;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_slime">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.vida --;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Desenhando sprite dos Corações na tela.
c = 1;

repeat (global.vida)
{
    draw_sprite_ext(spr_coracao, 0, 30*c, 20, 1.5, 1.5, 0, c_white, 1)
    c ++;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
